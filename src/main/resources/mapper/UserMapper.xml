<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.luoyan.elitecode.mapper.UserMapper">

    <resultMap id="UserResult" type="User">
            <id property="userId" column="user_id"/>
            <result property="userAccount" column="user_account"/>
            <result property="userPassword" column="user_password"/>
            <result property="nickName" column="nick_name"/>
            <result property="userAvatar" column="user_avatar"/>
            <result property="userProfile" column="user_profile"/>
            <result property="userRoles" column="user_roles" typeHandler="cn.luoyan.elitecode.common.utils.JSONTypeHandler"/>
            <result property="createBy" column="create_by"/>
            <result property="createTime" column="create_time"/>
            <result property="updateBy" column="update_by"/>
            <result property="updateTime" column="update_time"/>
    </resultMap>

    <sql id="selectUserVo">
        user_id,user_account,user_password,
        nick_name,user_avatar,user_profile,
        user_roles,create_by,create_time,
        update_by,update_time
    </sql>

    <select id="selectUserById" resultMap="UserResult" parameterType="Long">
        select
            <include refid="selectUserVo"/>
        from
            user
        where
            user_id = #{userId}
    </select>

    <select id="selectUserByUserAccount" resultMap="UserResult">
        select
            <include refid="selectUserVo"/>
        from
            user
        where
            user_account = #{userAccount}
    </select>

    <!-- int register(String userAccount, String encryptPassword); -->
    <insert id="insertUser" useGeneratedKeys="true" keyProperty="userId">
        insert into user(
            <trim suffixOverrides=",">
                <if test="userId != null">user_id,</if>
                <if test="userAccount != null and userAccount != ''">user_account,</if>
                <if test="userPassword != null and userPassword != ''">user_password,</if>
                <if test="userAvatar != null and userAvatar != ''">user_avatar,</if>
                <if test="userProfile != null and userProfile != ''">user_profile,</if>
                <if test="userRole != null and userRole != ''">user_roles,</if>
                <if test="createBy != null and createBy != ''">create_by,</if>
                <if test="updateBy != null and updateBy != ''">update_by,</if>
            </trim>
        )
        values(
            <trim suffixOverrides=",">
                <if test="userId != null">#{userId},</if>
                <if test="userAccount != null and userAccount != ''">#{userAccount},</if>
                <if test="userPassword != null and userPassword != ''">#{userPassword},</if>
                <if test="userAvatar != null and userAvatar != ''">#{userAvatar},</if>
                <if test="userProfile != null and userProfile != ''">#{userProfile},</if>
                <if test="userRoles != null and userRoles != ''">#{userRoles, typeHandler=cn.luoyan.elitecode.common.utils.JSONTypeHandler},</if>
                <if test="createBy != null and createBy != ''">#{createBy},</if>
                <if test="updateBy != null and updateBy != ''">#{updateBy},</if>
            </trim>
        )
    </insert>

    <!--  List<UserVO> selectUserList(User user); -->
    <select id="getUserByPage" resultMap="UserResult">
        select
            <include refid="selectUserVo"/>
        from
            user
        <where>
            <if test="userId != null">and user_id=#{userId}</if>
            <if test="userAccount != null and userAccount != ''">and user_account like "%"#{userAccount}"%"</if>
            <if test="nickName != null and nickName != ''">and nick_name like "%"#{nickName}"%"</if>
            <if test="userRole != null and userRole != ''">and JSON_CONTAINS(user_roles, JSON_QUOTE(#{userRole}))</if>
            <if test="createBy != null and createBy != ''">and create_by like "%"#{createBy}"%"</if>
            <if test="updateBy != null and updateBy != ''">and update_by like "%"#{updateBy}"%"</if>
            <if test="startTime != null and endTime != null">and create_time between #{startTime} and #{endTime}</if>
        </where>
        <if test="sortFieldPair != null and sortFieldPair.size() != 0">
            ORDER BY
                <foreach collection="sortFieldPair" separator="," item="sortField">
                    ${sortField}
                </foreach>
        </if>
        limit #{current}, #{pageSize}
    </select>

    <!-- Long getTotal(UserQueryDTO userQueryDTO); -->
    <select id="getTotal" resultType="java.lang.Long">
        select
            count(*)
        from
            user
        <where>
            <if test="userId != null">and user_id=#{userId}</if>
            <if test="userAccount != null and userAccount != ''">and user_account like "%"#{userAccount}"%"</if>
            <if test="nickName != null and nickName != ''">and nick_name like "%"#{nickName}"%"</if>
            <if test="userRole != null and userRole != ''">and JSON_CONTAINS(user_roles, JSON_QUOTE(#{userRole}))</if>
            <if test="createBy != null and createBy != ''">and create_by like "%"#{createBy}"%"</if>
            <if test="updateBy != null and updateBy != ''">and update_by like "%"#{updateBy}"%"</if>
            <if test="startTime != null and endTime != null">and create_time between #{startTime} and #{endTime}</if>
        </where>
    </select>

    <!-- void updateByPrimaryKeySelective(User user); -->
    <update id="updateByPrimaryKeySelective">
        UPDATE user
        <set>
            <if test="userAccount != null and userAccount != ''">user_account = #{userAccount},</if>
            <if test="nickName != null and nickName != ''">nick_name = #{nickName},</if>
            <if test="userProfile != null and userProfile != ''">user_profile = #{userProfile},</if>
            <if test="userRoles != null and userRoles.size() != 0">user_roles = #{userRoles, typeHandler=cn.luoyan.elitecode.common.utils.JSONTypeHandler},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
        </set>
        where
            user_id = #{userId}
    </update>
</mapper>
