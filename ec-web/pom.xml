<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>cn.elitecode</groupId>
        <artifactId>Elite-Code</artifactId>
        <version>1.0-SNAPSHOT</version>
    </parent>

    <groupId>cn.elitecode</groupId>
    <artifactId>ec-web</artifactId>

    <dependencies>
        <dependency>
            <groupId>cn.elitecode</groupId>
            <artifactId>ec-service</artifactId>
        </dependency>

        <dependency>
            <groupId>cn.elitecode</groupId>
            <artifactId>ec-model</artifactId>
        </dependency>

        <!-- 数据库连接 -->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <scope>runtime</scope>
        </dependency>

        <!-- 单元测试 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <finalName>${project.artifactId}</finalName>
        <plugins>
            <!-- SpringBoot应用打包插件 -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <mainClass>cn.elitecode.ECMainApplication</mainClass>
                </configuration>
                <executions>
                    <execution>
                        <id>repackage</id>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- 构建Docker镜像 -->
            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>${docker.maven.plugin.version}</version>
                <executions>
                    <!-- 定义一个任务 -->
                    <execution>
                        <!-- 指定唯一标识符 -->
                        <id>build-image</id>
                        <!-- 在package生命周期阶段被执行 -->
                        <phase>package</phase>
                        <goals>
                            <!-- 指定该任务的插件目标 -->
                            <goal>build</goal>
                        </goals>
                    </execution>
                </executions>
                <!-- 配置执行build目标时所需的具体配置参数 -->
                <configuration>
                    <!-- Docker 远程管理地址 -->
                    <dockerHost></dockerHost>
                    <images>
                        <image>
                            <!-- 定义镜像名称 -->
                            <name>elitecode/${project.artifactId}:${project.version}</name>
                            <!-- 定义镜像构建行为 -->
                            <build>
                                <!-- 定义基础镜像 -->
                                <from>openjdk:17</from>
                                <args>
                                    <JAR_FILE>${project.build.finalName}.jar</JAR_FILE>
                                </args>
                                <!-- 定义哪些文件拷贝到容器中 -->
                                <assembly>
                                    <!-- 定义拷贝到容器的目录 -->
                                    <targetDir>/</targetDir>
                                    <!-- 只拷贝生成的jar包 -->
                                    <descriptorRef>artifact</descriptorRef>
                                </assembly>
                                <!-- 定义容器启动命令 -->
                                <entryPoint>["java", "-jar", "-Duser.timezone=Asia/Shanghai", "-Dspring.profiles.active=prod", "/${project.build.finalName}.jar"]</entryPoint>
                                <!-- 定义维护者 -->
                                <maintainer>LuoYan</maintainer>
                            </build>
                        </image>
                    </images>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>