<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.elitecode.module.system.dal.mysql.menu.MenuMapper">

    <resultMap id="MenuResult" type="cn.elitecode.module.system.dal.dataobject.menu.MenuDO">
            <id property="id" column="m_id" />
            <result property="title" column="m_title" />
            <result property="parentId" column="parent_id" />
            <result property="sort" column="m_sort" />
            <result property="component" column="component" />
            <result property="ifFrame" column="if_frame" />
            <result property="type" column="type" />
            <result property="visible" column="visible" />
            <result property="status" column="m_status" />
            <result property="createBy" column="create_by" />
            <result property="createTime" column="create_time" />
            <result property="updateBy" column="update_by" />
            <result property="updateTime" column="update_time" />
    </resultMap>

    <insert id="insertMenu" useGeneratedKeys="true" keyProperty="id">
        insert into system_menu
            <trim prefix="(" suffix=")" suffixOverrides=",">
                <if test="title != null and title != ''">title,</if>
                <if test="parentId != null and parentId != 0">parentId,</if>
                <if test="sort != null">sort,</if>
                <if test="component != null and component != ''">component,</if>
                <if test="ifFrame != null">if_frame,</if>
                <if test="type != null and type != ''">type,</if>
                <if test="visible != null and visible != ''">visible,</if>
                <if test="status != null and status != ''">status,</if>
            </trim>
        values
            <trim prefix="(" suffix=")" suffixOverrides=",">
                <if test="title != null and title != ''">#{title},</if>
                <if test="parentId != null and parentId != 0">#{parentId},</if>
                <if test="sort != null">#{sort},</if>
                <if test="component != null and component != ''">#{component},</if>
                <if test="ifFrame != null">#{ifFrame},</if>
                <if test="type != null and type != ''">#{type},</if>
                <if test="visible != null and visible != ''">#{visible},</if>
                <if test="status != null and status != ''">#{status},</if>
            </trim>
    </insert>

    <!-- void updateMenuById(MenuDO menuDO); -->
    <update id="updateMenuById">
        update system_menu
        <set>
            <if test="title != null and title != ''">title = #{title},</if>
            <if test="parentId != null">parent_id = #{parentId},</if>
            <if test="sort != null">sort = #{sort},</if>
            <if test="component != null and component != ''">component = #{component},</if>
            <if test="ifFrame != null">if_frame = #{ifFrame},</if>
            <if test="visible != null and visible != ''">visible = #{visible},</if>
            <if test="status != null and status != ''">status = #{status},</if>
            <if test="updateBy != null and updateBy != 0">update_by = #{updateBy},</if>
        </set>
        where
            id = #{id}
    </update>

    <!-- void deleteByMenuIds(Long[] menuIds); -->
    <delete id="deleteByMenuIds">
        delete
        from
            system_menu
        where
            id in
            <foreach collection="menuIds" open="(" separator="," close=")" item="menuId">
                #{menuId}
            </foreach>
    </delete>

    <!-- List<MenuDO> selectMenuListByPage(MenuQueryReqVO menuQueryReqVO); -->
    <select id="selectMenuListByPage" resultMap="MenuResult">
        select
            id as m_id,
            title as m_title,
            parent_id,
            sort as m_sort,
            component,
            if_frame,
            type,
            visible,
            status as m_status,
            create_by,
            create_time,
            update_by,
            update_time
        from
            system_menu
        <where>
            <if test="title != null and title != ''">and title like concat("%", #{title}, "%")</if>
            <if test="status != null and status != ''">and status = #{status}</if>
            <if test="createBy != null and createBy != 0">and create_by = #{createBy}</if>
            <if test="updateBy != null and updateBy != 0">and update_by = #{updateBy}</if>
            <if test="startTime != null and endTime != null">and create_time between #{startTime} and #{endTime}</if>
        </where>
        <if test="sortFieldPair != null and sortFieldPair.size() > 0">
            order by
                <foreach collection="sortFieldPair" separator="," item="sortField">
                    ${sortField}
                </foreach>
        </if>
        limit #{current}, #{pageSize}
    </select>

    <!-- Long getTotalByPage(MenuQueryReqVO menuQueryReqVO); -->
    <select id="getTotalByPage" resultType="java.lang.Long">
        select
            count(1)
        from
            system_menu
        <where>
            <if test="title != null and title != ''">and title like concat("%", #{title}, "%")</if>
            <if test="status != null and status != ''">and status = #{status}</if>
            <if test="createBy != null and createBy != 0">and create_by = #{createBy}</if>
            <if test="updateBy != null and updateBy != 0">and update_by = #{updateBy}</if>
            <if test="startTime != null and endTime != null">and create_time between #{startTime} and #{endTime}</if>
        </where>
    </select>

    <!-- MenuDO selectMenuById(Long menuId); -->
    <select id="selectMenuById" resultMap="MenuResult">
        select
            id,title,parent_id,sort,component,if_frame,
            status,create_by,create_time,update_by,update_time
        from
            system_menu
        where
            id = #{menuId}
    </select>

    <!-- List<MenuDO> selectMenuListByUserId(Long userId); -->
    <select id="selectMenuListByUserId" resultMap="MenuResult">
        select distinct
            m.id as m_id,
            m.title as m_title,
            m.parent_id,
            m.sort as m_sort,
            m.component,
            m.if_frame,
            m.type,
            m.visible,
            m.status as m_status,
            m.create_by,
            m.create_time
        from
            system_menu m
            left join system_role_menu_relation rm on rm.menu_id = m.id
            left join system_role r on r.id = rm.role_id
            left join system_user_role_relation ur on ur.role_id = r.id
        where
            ur.user_id = #{userId}
    </select>

    <!-- List<Long> selectMenuListByRoleId(@Param("roleId") Long roleId, @Param("menuCheckStrictly") boolean menuCheckStrictly); -->
    <select id="selectMenuListByRoleId" resultType="java.lang.Long">
        select
            m.id as m_id
        from
            system_menu m
            left join system_role_menu_relation rm on rm.menu_id = m.id
        where
            rm.role_id = #{roleId}
            <if test="menuCheckStrictly != null">
                and m.id not in (select m.parent_id from system_menu m inner join system_role_menu_relation rm on rm.menu_id = m.id and rm.role_id = #{roleId})
            </if>
    </select>
</mapper>
