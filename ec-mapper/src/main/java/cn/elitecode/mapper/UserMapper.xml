<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.elitecode.mapper.UserMapper">

    <resultMap id="UserResult" type="User">
            <id property="id" column="id"/>
            <result property="username" column="username"/>
            <result property="password" column="password"/>
            <result property="nickName" column="nick_name"/>
            <result property="avatar" column="avatar"/>
            <result property="profile" column="profile"/>
            <result property="delFlag" column="del_flag"/>
            <result property="createBy" column="create_by"/>
            <result property="createTime" column="create_time"/>
            <result property="updateBy" column="update_by"/>
            <result property="updateTime" column="update_time"/>
    </resultMap>

    <select id="selectUserById" resultMap="UserResult" parameterType="Long">
        select
            id,username,password,
            nick_name,avatar,profile,
            del_flag,create_by,create_time,
            update_by,update_time
        from
            user
        where
            id = #{id}
    </select>

    <select id="selectUserByUsername" resultMap="UserResult">
        select
            id,username,password,
            nick_name,avatar,profile,
            del_flag,create_by,create_time,
            update_by,update_time
        from
            user
        where
            del_flag = '0'
            and username = #{username}
    </select>

    <!-- int register(String username, String encryptPassword); -->
    <insert id="insertUser" useGeneratedKeys="true" keyProperty="id">
        insert into user
            <trim prefix="(" suffix=")" suffixOverrides=",">
                <if test="id != null and id != 0">id,</if>
                <if test="username != null and username != ''">username,</if>
                <if test="password != null and password != ''">password,</if>
                <if test="avatar != null and avatar != ''">avatar,</if>
                <if test="profile != null and profile != ''">profile,</if>
                <if test="createBy != null and createBy != 0">create_by,</if>
                <if test="updateBy != null and updateBy != 0">update_by,</if>
            </trim>
        values
            <trim prefix="(" suffix=")" suffixOverrides=",">
                <if test="id != null and id != 0">#{id},</if>
                <if test="username != null and username != ''">#{username},</if>
                <if test="password != null and password != ''">#{password},</if>
                <if test="avatar != null and avatar != ''">#{avatar},</if>
                <if test="profile != null and profile != ''">#{profile},</if>
                <if test="createBy != null and createBy != 0">#{createBy},</if>
            </trim>
    </insert>

    <!--  List<User> selectUserList(User user); -->
    <select id="selectUserList" resultMap="UserResult">
        select
            id,username,password,
            nick_name,avatar,profile,
            del_flag,create_by,create_time,
            update_by,update_time
        from
            user
        where
            del_flag = '0'
            <if test="username != null and username != ''">and username like concat("%", #{username}, "%")</if>
            <if test="nickName != null and nickName != ''">and nick_name like concat("%", #{nickName}, "%")</if>
            <if test="createBy != null and createBy != 0">and create_by = #{createBy}</if>
            <if test="updateBy != null and updateBy != 0">and update_by = #{updateBy}</if>
            <if test="startTime != null and endTime != null">and create_time between #{startTime} and #{endTime}</if>
        <if test="sortFieldPair != null and sortFieldPair.size() > 0">
            ORDER BY
            <foreach collection="sortFieldPair" separator="," item="sortField">
                ${sortField}
            </foreach>
        </if>
        limit #{current}, #{pageSize}
    </select>

    <!-- Long getTotal(UserQueryDTO userQueryDTO); -->
    <select id="getUserTotal" resultType="java.lang.Long">
        select
            count(*)
        from
            user
        where
            del_flag = '0'
            <if test="username != null and username != ''">and username like concat("%", #{username}, "%")</if>
            <if test="nickName != null and nickName != ''">and nick_name like concat("%", #{nickName}, "%")</if>
            <if test="createBy != null and createBy != 0">and create_by like concat("%", #{createBy}, "%")</if>
            <if test="updateBy != null and updateBy != 0">and update_by like concat("%", #{updateBy}, "%")</if>
            <if test="startTime != null and endTime != null">and create_time between #{startTime} and #{endTime}</if>
    </select>

    <select id="checkUsernameUnique" resultMap="UserResult">
        select id, username from user where username = #{username} and del_flag = '0' limit 1
    </select>

    <!-- void updateByPrimaryKeySelective(User user); -->
    <update id="updateUserById">
        UPDATE user
        <set>
            <if test="username != null and username != ''">username = #{username},</if>
            <if test="nickName != null and nickName != ''">nick_name = #{nickName},</if>
            <if test="profile != null and profile != ''">profile = #{profile},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
        </set>
        where
            id = #{id}
    </update>

    <!-- int deleteUserByIds(Long[] userIds); -->
    <delete id="deleteUserByIds">
        update user
        set
            del_flag = '2'
        <where>
            id in
            <foreach collection="userIds" open="(" separator="," close=")" item="id">
                #{id}
            </foreach>
        </where>
    </delete>

    <!-- int updateUserAvatar(Long id, String avatarUrl); -->
    <update id="updateAvatar">
        update user
        set
            avatar = #{avatarUrl}
        where
            id = #{id}
    </update>

</mapper>
