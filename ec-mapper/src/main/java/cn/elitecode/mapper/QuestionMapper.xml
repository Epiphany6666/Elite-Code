<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.elitecode.mapper.QuestionMapper">

    <resultMap id="QuestionResult" type="Question">
        <id property="id" column="id"/>
        <result property="title" column="title"/>
        <result property="content" column="content"/>
        <result property="answer" column="answer"/>
        <result property="delFlag" column="del_flag"/>
        <result property="createBy" column="create_by"/>
        <result property="createTime" column="create_time"/>
        <result property="updateBy" column="update_by"/>
        <result property="updateTime" column="update_time"/>
        <collection property="problemsets" resultMap="ProblemsetResult"/>
    </resultMap>

    <resultMap id="ProblemsetResult" type="problemset">
        <id property="id" column="p_id" />
        <result property="title" column="p_title" />
    </resultMap>

    <sql id="selectQuestionVO">
        id,title,content,answer,del_flag,
        create_by,create_time,update_by,update_time
    </sql>

    <!-- int insertQuestion(Question question); -->
    <insert id="insertQuestion" useGeneratedKeys="true" keyProperty="id">
        insert into question
            <trim prefix="(" suffix=")" suffixOverrides=",">
                <if test="title != null and title != ''">title,</if>
                <if test="content != null and content != ''">content,</if>
                <if test="answer != null and answer != ''">answer,</if>
                <if test="createBy != null and createBy != ''">create_by,</if>
            </trim>
        values
            <trim prefix="(" suffix=")" suffixOverrides=",">
                <if test="title != null and title != ''">#{title},</if>
                <if test="content != null and content != ''">#{content},</if>
                <if test="answer != null and answer != ''">#{answer},</if>
                <if test="createBy != null and createBy != ''">#{createBy},</if>
            </trim>
    </insert>

    <!-- void updateQuestionById(Question question); -->
    <update id="updateQuestionById">
        update question
        <set>
            <if test="title != null and title != ''">title = #{title},</if>
            <if test="content != null and content != ''">content = #{content},</if>
            <if test="answer != null and answer != ''">answer = #{answer},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
        </set>
        where
            id = #{id}
    </update>

    <delete id="deleteByQuestionIds">
        update question
        set
            del_flag = '2'
        where id in 
            <foreach collection="questionIds" separator="," open="(" close=")" item="id">
                #{id}
            </foreach>
    </delete>

    <!-- int deleteByQuestionIds(@Param("questionIds") Long[] questionIds); -->
    <select id="selectQuestionById" resultMap="QuestionResult">
        select
            q.id,
            q.title,
            q.content,
            q.answer,
            q.del_flag,
            q.create_by,
            q.create_time,
            q.update_by,
            q.update_time,
            p.id as `p_id`,
            p.title as `p_title`,
            p.description
        from
            question q
            LEFT JOIN problemset_question pq ON pq.question_id = q.id
            LEFT JOIN problemset p ON p.id = pq.problemset_id
        where
            q.id = #{questionId}
    </select>

    <!-- List<Question> selectQuestionList(QuestionQueryDTO questionQueryDTO); -->
    <select id="selectQuestionList" resultMap="QuestionResult">
        select
            q.id,
            q.title,
            q.content,
            q.answer,
            q.del_flag,
            q.create_by,
            q.create_time,
            q.update_by,
            q.update_time,
            p.id as `p_id`,
            p.title as `p_title`,
            p.description
        from
            question q
            LEFT JOIN problemset_question pq ON pq.question_id = q.id
            LEFT JOIN problemset p ON p.id = pq.problemset_id
        <where>
            q.del_flag = '0'
            <if test="title != null and title != ''">and q.title like "%"#{title}"%"</if>
            <if test="content != null and content != ''">and q.content like "%"#{content}"%"</if>
        </where>
        <if test="sortFieldPair != null and sortFieldPair.size() > 0">
            order by
                <foreach collection="sortFieldPair" separator="," item="sortField">
                    ${sortField}
                </foreach>
        </if>
        limit #{current}, #{pageSize}
    </select>

    <!-- Long getQuestionTotal(QuestionQueryDTO questionQueryDTO); -->
    <select id="getQuestionTotal" resultType="java.lang.Long">
        select
            count(*)
        from
            question
        <where>
            del_flag = '0'
            <if test="title != null and title != ''">and title like "%"#{title}"%"</if>
            <if test="content != null and content != ''">and content like "%"#{content}"%"</if>
        </where>
    </select>

</mapper>
